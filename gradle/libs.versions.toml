[versions]
agp = "8.5.2"
kotlin = "2.0.0"
coreKtx = "1.13.1"
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
appcompat = "1.7.0"
material = "1.12.0"
activity = "1.9.1"
constraintlayout = "2.1.4"
ktor = "2.3.12"
compose_activity = "1.9.0"
composeBom = "2024.06.00"
circuit = "0.22.2"
koinBom = "3.5.6"
koin_annotation = "1.3.0"
ksp = "2.0.0-1.0.24"

[libraries]
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
androidx-activity = { group = "androidx.activity", name = "activity", version.ref = "activity" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }
androidx-compose-activity = { group = "androidx.activity", name = "activity-compose", version.ref = "compose_activity" }


# Compose 라이브러리 추가 (BOM 사용)
compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
compose-ui = { group = "androidx.compose.ui", name = "ui" }
compose-material = { group = "androidx.compose.material", name = "material" }
compose-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
compose-foundation = { group = "androidx.compose.foundation", name = "foundation" }
compose-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }

# ktor 추가
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
# Circuit 라이브러리 추가
circuit_foundation = { module = "com.slack.circuit:circuit-foundation", version.ref = "circuit" }
circuit_test = { module = "com.slack.circuit:circuit-test", version.ref = "circuit" }
circuit_overlay = { module = "com.slack.circuit:circuit-overlay", version.ref = "circuit" }
circuit_retained = { module = "com.slack.circuit:circuit-retained", version.ref = "circuit" }
circuit_effects = { module = "com.slack.circuit:circuitx-effects", version.ref = "circuit" }

# koin
koin-bom = { module = "io.insert-koin:koin-bom", version.ref = "koinBom" }
koin-core = { group = "io.insert-koin", name = "koin-core" }
koin-android = { group = "io.insert-koin", name = "koin-android" }
koin-android-workmanager = { group = "io.insert-koin", name = "koin-androidx-workmanager" }
koin-android-compose = { group = "io.insert-koin", name = "koin-androidx-compose" }
koin-annotations = { module = "io.insert-koin:koin-annotations", version.ref = "koin-annotation" }
koin-ksp-compiler = { module = "io.insert-koin:koin-ksp-compiler", version.ref = "koin-annotation" }


[plugins]
kotlinParcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
android-application = { id = "com.android.application", version.ref = "agp" }
jetbrains-kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }